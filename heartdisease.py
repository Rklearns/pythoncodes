# -*- coding: utf-8 -*-
"""HeartDisease.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1lmMZGGlAF77fLW7PSTLc1eCKu6U6rZs6
"""

import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score

df=pd.read_csv('/content/heart_disease_data.csv')

df.head(5)#first 5 rows of the datset

df.tail(5)

df.shape

df.info()

df.isnull().sum()

#since there are no nan values we can continue
df['target'].value_counts()

#here 1 means proper heart and 0 means improper heart
df.tail()

X=df.drop(columns='target',axis=1)
Y=df['target']
X.head()#now X doesnt have target

##lets do splitting of data
X_train,X_test,Y_train,Y_test=train_test_split(X,Y,test_size=0.2,stratify=Y,random_state=2)
print(X.shape,X_train.shape,X_test.shape)

#lets try woth logistic regression
model=LogisticRegression()

model.fit(X_train,Y_train)

X_model=model.predict(X_train)
training_data_accuracy=accuracy_score(X_model,Y_train)
training_data_accuracy

X_testing=model.predict(X_test)
testing_data=accuracy_score(X_testing,Y_test)
testing_data

